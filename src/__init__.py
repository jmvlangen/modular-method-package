from modular_method.diophantine_equations.conditions import CoprimeCondition
from modular_method.diophantine_equations.conditions import CongruenceCondition
from modular_method.diophantine_equations.conditions import PolynomialCondition
from modular_method.diophantine_equations.conditions import ExistsCondition
from modular_method.diophantine_equations.conditions import PowerCondition
from modular_method.diophantine_equations.conditions import OrderCondition

from modular_method.elliptic_curves.Qcurves import Qcurve
from modular_method.elliptic_curves.frey_curves import FreyCurve
from modular_method.elliptic_curves.frey_curves import FreyQcurve

from modular_method.modular_forms.newform_wrapper import get_newforms
from modular_method.modular_forms.elimination import eliminate_by_trace
from modular_method.modular_forms.elimination import eliminate_by_traces
from modular_method.modular_forms.elimination import eliminate_cm_forms
from modular_method.modular_forms.elimination import eliminate_primes
from modular_method.modular_forms.elimination import combine_newforms
from modular_method.modular_forms.elimination import kraus_method
